package br.com.weblicita.mb.cadastro;

import java.io.Serializable;
import com.xpert.core.crud.AbstractBaseBean;
import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;
import br.com.weblicita.bo.cadastro.OrgaoBO;
import br.com.weblicita.bo.cadastro.TelefoneBO;
import br.com.weblicita.modelo.cadastro.Orgao;
import br.com.weblicita.modelo.cadastro.Telefone;
import com.xpert.faces.utils.FacesMessageUtils;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Juniel
 */
@ManagedBean
@ViewScoped
public class OrgaoMB extends AbstractBaseBean<Orgao> implements Serializable {

    @EJB
    private OrgaoBO orgaoBO;

    private String telefone = "";

    private List<Telefone> telefones = new ArrayList<Telefone>();

    private String cnpj;

    private boolean flagHabilitarCampos;

    @Override
    public OrgaoBO getBO() {
        return orgaoBO;
    }

    @Override
    public String getDataModelOrder() {
        return "id";
    }

    @Override
    public void init() {
        flagHabilitarCampos = true;
        if (getEntity().getId() != null) {
        } else {
            Integer novoCodigo = orgaoBO.gerarCodigo();
            if (novoCodigo != null) {
                getEntity().setCodigo(novoCodigo);
            }
        }
    }

    @Override
    public void save() {
        super.save();

    }

    public String getTelefone() {
        return telefone;
    }

    public void setTelefone(String telefone) {
        this.telefone = telefone;
    }

    public String getCnpj() {
        return cnpj;
    }

    public void setCnpj(String cnpj) {
        this.cnpj = cnpj;
    }

    public boolean isFlagHabilitarCampos() {
        return flagHabilitarCampos;
    }

    public void setFlagHabilitarCampos(boolean flagHabilitarCampos) {
        this.flagHabilitarCampos = flagHabilitarCampos;
    }

    public List<Telefone> getTelefones() {
        return telefones;
    }

    public void setTelefones(List<Telefone> telefones) {
        this.telefones = telefones;
    }

    public void addTelefone() {
        if (telefone.equals("")) {
            FacesMessageUtils.error("O número do telefone é obrigatório!");
        } else {
            Telefone telefoneTemp = new Telefone();
            telefoneTemp.setNumero(telefone);
            getEntity().getTelefones().add(telefoneTemp);

            telefone = "";
        }
    }

    public void removerTelefone(Telefone telefone) {
        getEntity().getTelefones().remove(telefone);
    }

    public void buscar() {
        Orgao orgao = orgaoBO.getDAO().unique("cnpj", cnpj);
        if (orgao != null) {
            setEntity(orgao);
            telefones = getBO().getDAO().getInitialized(orgao.getTelefones());
        } else {
            FacesMessageUtils.error("Orgão não encontrado!!");
        }
    }

    public void novo() {
        setEntity(new Orgao());
        telefones = new ArrayList<Telefone>();
        Integer novoCodigo = orgaoBO.gerarCodigo();
        if (novoCodigo != null) {
            getEntity().setCodigo(novoCodigo);
        }
        flagHabilitarCampos = false;
    }

    public void editar() {
        if (getEntity().getId() != null) {
            flagHabilitarCampos = false;
        } else {
            FacesMessageUtils.error("Carregue o Órgão que será editado!!");
        }
    }

    public void desativar() {
        if (getEntity().getId() != null) {
            getEntity().setAtivo(false);
            super.save();
        } else {
            FacesMessageUtils.error("Carregue o Órgão que será desabilitado!!");
        }
    }

}
